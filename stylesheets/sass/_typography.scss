// ---------------------------------------------------------------------------
// Imports
// ---------------------------------------------------------------------------

@import "modular-scale";

// ---------------------------------------------------------------------------
// Size Functions and Mixins
// ---------------------------------------------------------------------------

@function -mca-rem-to-px ($rem-value) {
  @return ( $rem-value*$standard-browser-font-size )/$base-size-rem;
}

@function -mca-px-to-rem ($px-value) {
  @return ( $px-value*$base-size-rem )/$standard-browser-font-size;
}

@function strip-unit($num) {
  @return $num / ($num * 0 + 1);
}

@function extra-margin-from-line-height($font-size, $line-height) {
  @return ($line-height - 1)*$font-size;
}

@mixin rem-fallback($property, $values...) {
  $max: length($values);
  $pxValues: '';
  $remValues: '';

  @for $i from 1 through $max {
    $value: strip-unit(nth($values, $i));
    $pxValues: #{$pxValues + ( $value*$standard-browser-font-size )/$base-size-unitless}px;

    @if $i < $max {
      $pxValues: #{$pxValues + " "};
    }
  }

  @for $i from 1 through $max {
    $value: strip-unit(nth($values, $i));
    $remValues: #{$remValues + $value}rem;

    @if $i < $max {
      $remValues: #{$remValues + " "};
    }
  }

  #{$property}: $pxValues;
  #{$property}: $remValues;
}

@mixin margin-bottom-rem-fallback($val, $font-size, $line-height) {
  $final-margin-bottom: $val - extra-margin-from-line-height($font-size, $line-height);
  @include rem-fallback(margin-bottom, $final-margin-bottom);
}

// ---------------------------------------------------------------------------
// Size Settings
// ---------------------------------------------------------------------------

$target-pixel-size: 18;
$standard-browser-font-size: 16;
$html-font-size: $target-pixel-size/$standard-browser-font-size;
$html-font-size-percent: percentage( $html-font-size );

$base-size-rem: 1rem;
$ratio: major-third() fifth();

$micro-rem:    ms(-7, $base-size-rem, $ratio); /* $micro-rem:       #{$micro-rem}    */
$tiniest-rem:  ms(-5, $base-size-rem, $ratio);  /* $tiniest-rem:     #{$tiniest-rem}  */
$tiny-rem:     ms(-4, $base-size-rem, $ratio);  /* $tiny-rem:        #{$tiny-rem}     */
$smallest-rem: ms(-2, $base-size-rem, $ratio);  /* $smallest-rem:    #{$smallest-rem} */
$smaller-rem:  ms(-1, $base-size-rem, $ratio);  /* $smaller-rem:     #{$smaller-rem}  */
$small-rem:    ms(0, $base-size-rem, $ratio);   /* $small-rem:       #{$small-rem}    */
$norm-rem:     ms(1, $base-size-rem, $ratio);   /* $norm-rem:        #{$norm-rem}     */
$large-rem:    ms(2, $base-size-rem, $ratio);   /* $large-rem:       #{$large-rem}    */
$larger-rem:   ms(4, $base-size-rem, $ratio);   /* $larger-rem:      #{$larger-rem}   */
$largest-rem:  ms(5, $base-size-rem, $ratio);   /* $largest-rem:     #{$largest-rem}  */
$huge-rem:     ms(6, $base-size-rem, $ratio);   /* $huge-rem:        #{$huge-rem}     */
$epic-rem:     ms(7, $base-size-rem, $ratio);   /* $epic-rem:        #{$epic-rem}     */

$base-size-unitless: strip-unit($base-size-rem);


$micro-unitless:    strip-unit($micro-rem);    /* $micro-unitless:    #{$micro-unitless}  */
$tiniest-unitless:  strip-unit($tiniest-rem);  /* $tiniest-unitless:  #{$tiniest-unitless}  */
$tiny-unitless:     strip-unit($tiny-rem);     /* $tiny-unitless:     #{$tiny-unitless}     */
$smallest-unitless: strip-unit($smallest-rem); /* $smallest-unitless: #{$smallest-unitless} */
$smaller-unitless:  strip-unit($smaller-rem);  /* $smaller-unitless:  #{$smaller-unitless}  */
$small-unitless:    strip-unit($small-rem);    /* $small-unitless:    #{$small-unitless}    */
$norm-unitless:     strip-unit($norm-rem);     /* $norm-unitless:     #{$norm-unitless}     */
$large-unitless:    strip-unit($large-rem);    /* $large-unitless:    #{$large-unitless}    */
$larger-unitless:   strip-unit($larger-rem);   /* $larger-unitless:   #{$larger-unitless}   */
$largest-unitless:  strip-unit($largest-rem);  /* $largest-unitless:  #{$largest-unitless}  */
$huge-unitless:     strip-unit($huge-rem);     /* $huge-unitless:     #{$huge-unitless}     */
$epic-unitless:     strip-unit($epic-rem);     /* $epic-unitless:     #{$epic-unitless}     */

$base-margin-rem: $large-rem;
$big-break-margin-rem: $huge-rem;
$base-line-height: $large-unitless;

// ---------------------------------------------------------------------------
// Styles
// ---------------------------------------------------------------------------

body {
  font-family: 'Source Sans Pro - Light', sans-serif;
  font-size: $html-font-size-percent;
}

h1, h2, h3, h4, h5, h6 {
  font-family: 'Source Sans Pro - Black', sans-serif;
  line-height: $norm-unitless;
}

h1 {
  @include rem-fallback(font-size, $large-rem);
  @include margin-bottom-rem-fallback($smaller-rem, $large-rem, $norm-unitless);
}

p {
  @include rem-fallback(margin-bottom, $norm-rem);
}

// ---------------------------------------------------------------------------
// Font-faces
// ---------------------------------------------------------------------------

@font-face {
  font-family: 'Geomancy - Extra Bold';
  src: url('../../fonts/GeomancyExtraBold.otf');
}

@font-face {
  font-family: 'Source Sans Pro - Light';
  src: url('../../fonts/SourceSansProLight.otf');
}

@font-face {
  font-family: 'Source Sans Pro - Regular';
  src: url('../../fonts/SourceSansProRegular.otf');
}

@font-face {
  font-family: 'Source Sans Pro - Black';
  src: url('../../fonts/SourceSansProBlack.otf');
}
